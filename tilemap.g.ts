// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. 2 . . . 2 . . 2 . . . 2 . . . 
. 2 . 2 . 2 . . 2 . 2 . . . 2 . 
. 2 . 2 . 2 2 . 2 . 2 2 2 2 2 . 
. 2 . 2 . 2 . . 2 . . . . . 2 . 
. 2 . 2 . 2 . 2 2 2 . . . . 2 . 
. 2 . 2 . 2 . . . . . . . . 2 . 
. 2 . 2 . . . 2 2 2 2 2 2 . 2 . 
. 2 . 2 . . . . . . . 2 2 . 2 . 
. 2 . 2 2 2 . 2 2 . . . 2 . 2 . 
. 2 . 2 . 2 2 . . . 2 . 2 . 2 . 
. 2 . 2 . 2 . 2 . 2 2 . 2 . 2 . 
. 2 . 2 . 2 . 2 . 2 . . 2 . 2 . 
. 2 . . . 2 . 2 . 2 . 2 2 . 2 . 
. 2 . 2 . 2 . 2 . 2 . . . . 2 . 
. 2 . 2 . 2 . 2 . 2 2 2 2 2 2 2 
. . . 2 . . . 2 . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.doorOpenNorth,sprites.builtin.forestTiles8,sprites.dungeon.doorOpenEast], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. 2 . . . 2 . . . 2 . . . 2 . . 
. 2 . 2 . 2 . 2 . 2 . 2 . 2 . 2 
. 2 . 2 . 2 . 2 . 2 . 2 . 2 . 2 
. 2 . 2 . . . 2 . . . 2 . . . 2 
. 2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 . 2 . . . . . . . . . . . . 
. . . 2 . 2 2 2 2 2 2 2 2 2 . . 
. 2 2 . . 2 . . . . . . . 2 . . 
. 2 . . . 2 . 2 2 2 2 2 2 2 . . 
. 2 . 2 . 2 . . . . . . . . . . 
. 2 . 2 . 2 2 2 . 2 2 2 2 2 2 2 
. . . 2 . 2 . . . . . . . . . . 
. 2 . 2 . 2 2 2 2 2 2 2 2 2 2 . 
. 2 . 2 . . 2 . . . . . . . 2 . 
. 2 . 2 2 2 2 2 2 2 2 2 2 . 2 . 
. 2 . . . . . . . . . . . . 2 . 
`, [myTiles.transparency16,sprites.builtin.forestTiles4,sprites.dungeon.collectibleInsignia,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex`100010000b0301030101010301010103010101030103010101030101010301010103010101030104040a0404040a0404040a05010103010101010101010101010101030101020404040404040404040103010301010101010101010101010101030103010904080404040404040404040601030103010301010103010101010101010301030101010301020408040404050103010301030103010101030101010204050103010301030101010101030101010301030103010704040404040a04040101010301030103010101010101030101030103010208060109040405010204040a04010101030101030101030101010101010103010101040601010204040404040c`, img`
. 2 . 2 . . . 2 . . . 2 . . . 2 
. 2 . . . 2 . . . 2 . . . 2 . . 
. 2 . 2 2 2 2 2 2 2 2 2 2 2 2 . 
. 2 . . . . . . . . . . . . 2 . 
. 2 2 2 2 2 2 2 2 2 2 . 2 . 2 . 
. . . . . . . . . . . . 2 . 2 . 
2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 . 
2 . 2 . . . 2 . . . . . . . 2 . 
2 . . . 2 . 2 2 2 2 2 2 2 . 2 . 
2 . 2 . 2 . . . 2 . . . 2 2 2 . 
2 . 2 . 2 . . . . . 2 . . . 2 . 
2 . 2 . 2 2 2 2 2 2 2 2 2 . . . 
2 . 2 . 2 . . . . . . 2 . . 2 . 
2 . 2 2 2 . 2 2 2 2 . 2 2 2 2 2 
. . . 2 . . 2 . . 2 . . . . . . 
. 2 . . . 2 2 . . 2 2 2 2 2 2 . 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.vehicle.roadTurn3,sprites.vehicle.roadVertical,sprites.vehicle.roadHorizontal,sprites.vehicle.roadTurn2,sprites.vehicle.roadTurn4,sprites.vehicle.roadIntersection2,sprites.vehicle.roadIntersection3,sprites.vehicle.roadTurn1,sprites.vehicle.roadIntersection1,sprites.dungeon.hazardHole,sprites.dungeon.hazardWater], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. 2 . 2 . . . . . . . . . . . . 
. 2 . 2 2 2 2 . 2 2 2 2 2 2 2 . 
. 2 . . . . 2 . 2 . . 2 . . . . 
. 2 2 2 2 . 2 . 2 . . . . 2 2 . 
. . . . . . 2 . 2 2 2 2 2 2 . . 
. . 2 . 2 . 2 . . . . . . 2 . 2 
. . 2 . 2 2 2 2 2 2 2 2 . 2 . . 
. . 2 . 2 . . . . . . 2 . 2 2 . 
. 2 2 . 2 2 . 2 2 2 . 2 . 2 . . 
. 2 2 . 2 . . . . 2 . 2 . 2 2 . 
. 2 2 . 2 . 2 2 2 2 . . . . 2 . 
. 2 2 . 2 . . . . 2 2 2 . 2 2 . 
. . 2 . 2 2 2 2 . 2 . . . 2 . . 
2 2 2 . . . . . . 2 . 2 2 2 . 2 
. . 2 2 2 2 2 2 2 2 . 2 . . . . 
. . . . . 2 . . . . . 2 . . 2 . 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tileGrass3,sprites.castle.tileGrass1,sprites.castle.saplingPine,sprites.builtin.forestTiles14,sprites.swamp.swampTile13], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
